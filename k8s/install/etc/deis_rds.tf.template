# NOTE: The following values are replaced via sed as part of stage1.sh
# TF_RESOURCE_NAME
# KOPS_NAME
# KOPS_AZS

/*
Create an RDS instance, subnets and security groups
*/

resource "aws_db_instance" "default" {
  depends_on             = ["aws_security_group.default"]
  identifier             = "${var.identifier}"
  allocated_storage      = "${var.storage}"
  engine                 = "${var.engine}"
  engine_version         = "${lookup(var.engine_version, var.engine)}"
  instance_class         = "${var.instance_class}"
  name                   = "${var.db_name}"
  username               = "${var.username}"
  password               = "${var.password}"
  vpc_security_group_ids = ["${aws_security_group.default.id}"]
  db_subnet_group_name   = "${aws_db_subnet_group.default.id}"
  backup_retention_period = 30
  multi_az = true
}

resource "aws_db_subnet_group" "default" {
  name        = "main_subnet_group"
  description = "Database subnets"
  subnet_ids  = [KOPS_AZS]
}

/********************
Security groups
*********************/
resource "aws_security_group" "default" {
  name        = "main_rds_sg"
  description = "Allow all inbound traffic"
  vpc_id      = "${aws_vpc.TF_RESOURCE_NAME.id}"

  ingress {
    from_port   = "${var.sg_open_pgsql_port}"
    to_port     = "${var.sg_open_pgsql_port}"
    protocol    = "TCP"
    cidr_blocks = ["${var.cidr_blocks}"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags {
    Name = "${var.sg_name}"
  }
}



/********************
RDS outputs
*********************/
output "pgsql_username" {
  value = "${var.username}"
}

output "pgsql_password" {
  value = "${var.password}"
}

output "pgsql_db_name" {
  value = "${var.db_name}"
}

output "pgsql_port" {
  value = "${aws_db_instance.default.port}"
}

output "pgsql_address" {
  value = "${aws_db_instance.default.address}"
}

output "pgsql_endpoint" {
  value = "${aws_db_instance.default.endpoint}"
}


